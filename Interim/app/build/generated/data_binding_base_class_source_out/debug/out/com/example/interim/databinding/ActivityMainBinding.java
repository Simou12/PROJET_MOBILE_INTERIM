// Generated by view binder compiler. Do not edit!
package com.example.interim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.interim.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button aide;

  @NonNull
  public final Button anonyme;

  @NonNull
  public final Button conx;

  @NonNull
  public final ImageView image;

  @NonNull
  public final Button inscription;

  @NonNull
  public final TextView titre;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull Button aide,
      @NonNull Button anonyme, @NonNull Button conx, @NonNull ImageView image,
      @NonNull Button inscription, @NonNull TextView titre) {
    this.rootView = rootView;
    this.aide = aide;
    this.anonyme = anonyme;
    this.conx = conx;
    this.image = image;
    this.inscription = inscription;
    this.titre = titre;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aide;
      Button aide = ViewBindings.findChildViewById(rootView, id);
      if (aide == null) {
        break missingId;
      }

      id = R.id.anonyme;
      Button anonyme = ViewBindings.findChildViewById(rootView, id);
      if (anonyme == null) {
        break missingId;
      }

      id = R.id.conx;
      Button conx = ViewBindings.findChildViewById(rootView, id);
      if (conx == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.inscription;
      Button inscription = ViewBindings.findChildViewById(rootView, id);
      if (inscription == null) {
        break missingId;
      }

      id = R.id.titre;
      TextView titre = ViewBindings.findChildViewById(rootView, id);
      if (titre == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, aide, anonyme, conx, image,
          inscription, titre);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
