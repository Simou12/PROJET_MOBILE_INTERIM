// Generated by view binder compiler. Do not edit!
package com.example.interim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.interim.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRoleBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button bntInterim;

  @NonNull
  public final Button btnAgence;

  @NonNull
  public final Button btnEmplyeur;

  @NonNull
  public final Button btnGestionnaire;

  @NonNull
  public final TextView titre;

  @NonNull
  public final TextView txt;

  private ActivityRoleBinding(@NonNull RelativeLayout rootView, @NonNull Button bntInterim,
      @NonNull Button btnAgence, @NonNull Button btnEmplyeur, @NonNull Button btnGestionnaire,
      @NonNull TextView titre, @NonNull TextView txt) {
    this.rootView = rootView;
    this.bntInterim = bntInterim;
    this.btnAgence = btnAgence;
    this.btnEmplyeur = btnEmplyeur;
    this.btnGestionnaire = btnGestionnaire;
    this.titre = titre;
    this.txt = txt;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRoleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRoleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_role, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRoleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bntInterim;
      Button bntInterim = ViewBindings.findChildViewById(rootView, id);
      if (bntInterim == null) {
        break missingId;
      }

      id = R.id.btnAgence;
      Button btnAgence = ViewBindings.findChildViewById(rootView, id);
      if (btnAgence == null) {
        break missingId;
      }

      id = R.id.btnEmplyeur;
      Button btnEmplyeur = ViewBindings.findChildViewById(rootView, id);
      if (btnEmplyeur == null) {
        break missingId;
      }

      id = R.id.btnGestionnaire;
      Button btnGestionnaire = ViewBindings.findChildViewById(rootView, id);
      if (btnGestionnaire == null) {
        break missingId;
      }

      id = R.id.titre;
      TextView titre = ViewBindings.findChildViewById(rootView, id);
      if (titre == null) {
        break missingId;
      }

      id = R.id.txt;
      TextView txt = ViewBindings.findChildViewById(rootView, id);
      if (txt == null) {
        break missingId;
      }

      return new ActivityRoleBinding((RelativeLayout) rootView, bntInterim, btnAgence, btnEmplyeur,
          btnGestionnaire, titre, txt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
