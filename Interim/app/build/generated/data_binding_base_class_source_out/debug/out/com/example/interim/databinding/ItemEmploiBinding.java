// Generated by view binder compiler. Do not edit!
package com.example.interim.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.interim.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEmploiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView adress;

  @NonNull
  public final CardView card;

  @NonNull
  public final TextView dateDebFin;

  @NonNull
  public final ConstraintLayout layout1;

  @NonNull
  public final ConstraintLayout layoutCache;

  @NonNull
  public final TextView nomEmploi;

  @NonNull
  public final TextView nomEntreprise;

  @NonNull
  public final ImageView traitementCand;

  private ItemEmploiBinding(@NonNull ConstraintLayout rootView, @NonNull TextView adress,
      @NonNull CardView card, @NonNull TextView dateDebFin, @NonNull ConstraintLayout layout1,
      @NonNull ConstraintLayout layoutCache, @NonNull TextView nomEmploi,
      @NonNull TextView nomEntreprise, @NonNull ImageView traitementCand) {
    this.rootView = rootView;
    this.adress = adress;
    this.card = card;
    this.dateDebFin = dateDebFin;
    this.layout1 = layout1;
    this.layoutCache = layoutCache;
    this.nomEmploi = nomEmploi;
    this.nomEntreprise = nomEntreprise;
    this.traitementCand = traitementCand;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEmploiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEmploiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_emploi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEmploiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adress;
      TextView adress = ViewBindings.findChildViewById(rootView, id);
      if (adress == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.dateDebFin;
      TextView dateDebFin = ViewBindings.findChildViewById(rootView, id);
      if (dateDebFin == null) {
        break missingId;
      }

      id = R.id.layout1;
      ConstraintLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layoutCache;
      ConstraintLayout layoutCache = ViewBindings.findChildViewById(rootView, id);
      if (layoutCache == null) {
        break missingId;
      }

      id = R.id.nomEmploi;
      TextView nomEmploi = ViewBindings.findChildViewById(rootView, id);
      if (nomEmploi == null) {
        break missingId;
      }

      id = R.id.nomEntreprise;
      TextView nomEntreprise = ViewBindings.findChildViewById(rootView, id);
      if (nomEntreprise == null) {
        break missingId;
      }

      id = R.id.traitementCand;
      ImageView traitementCand = ViewBindings.findChildViewById(rootView, id);
      if (traitementCand == null) {
        break missingId;
      }

      return new ItemEmploiBinding((ConstraintLayout) rootView, adress, card, dateDebFin, layout1,
          layoutCache, nomEmploi, nomEntreprise, traitementCand);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
